[uwsgi]
; Production .ini file
module = run:app
master = true
strict = true
enable-threads = true
single-interpreter = true
need-app = true
; This parameter prevents uWSGI from starting if it is unable to find or load your application module.
; There is no magic rule for setting the number of processes or threads to use. 
; It is very much application and system dependent so you'll need to experiment.
; Reference from : https://gist.github.com/pmav99/4200b7e3740c09d2f4b1f34c527eb3fb#use-the-uwsgi-cheaper-subsystem
threads = 1

cheaper-algo = busyness
processes = 500                      ; Maximum number of workers allowed
cheaper = 5                          ; Minimum number of workers allowed
cheaper-initial = 8                ; Workers created at startup
cheaper-overload = 5                 ; Length of a cycle in seconds
cheaper-step = 8                    ; How many workers to spawn at a time

cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergegency workers to create if there are too many requests in the queue


socket = app.sock
chmod-socket = 660
vacuum = true
; Delete sockets during shutdown
die-on-term = true

; To avoid the `SIGPIPE: writing to a closed pipe/socket/fd`,that occurs as WSGI close the pipe after some time while
; keep processing it.
http-timeout = 3600000