[uwsgi]
; Use this file to run the application with uwsgi locally using <uwsgi dev.ini> 

; Where run.py is the python file containing the callable app object
module = run:app

; This could optionally be achieved with
; wsgi-file = run.py
; callable = app

; For local development only. The app will be available at localhost:9090
http = :9090

; A master process will respawn processes when they die
master = true
need-app = true
; By default uWSGI starts with a single process and a single thread
; We'll start with 10 processes
; Reference from : https://gist.github.com/pmav99/4200b7e3740c09d2f4b1f34c527eb3fb#use-the-uwsgi-cheaper-subsystem
threads = 1

cheaper-algo = busyness
processes = 500                      ; Maximum number of workers allowed
cheaper = 5                          ; Minimum number of workers allowed
cheaper-initial = 8                ; Workers created at startup
cheaper-overload = 5                 ; Length of a cycle in seconds
cheaper-step = 8                    ; How many workers to spawn at a time

cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergegency workers to create if there are too many requests in the queue
; To avoid the `SIGPIPE: writing to a closed pipe/socket/fd`,that occurs as WSGI close the pipe after some time while
; keep processing it.
http-timeout = 3600000

; Kill uwsgi with <Ctrl + c>